
ARG OWNER=registry.auto.tuwien.ac.at/roblab/docker/bionic/melodic
ARG BASE_CONTAINER=$OWNER-enviroment-ide
FROM $BASE_CONTAINER

ENV INST_SCRIPTS=/tmp
ENV SRC_DIR=./mpn

ENV PROJECT_ROOT ${MY_HOME}/projects/mpn

USER root


# Install locale and set
RUN apt-get update &&  apt-get install -y git python3-pip \
   libmgl-dev libjsoncpp-dev autoconf libncurses5-dev libdxflib-dev \
   libgoogle-perftools-dev gperf

# ROS 
RUN apt-get install -y \
    ros-${ROS_DISTRO}-costmap-2d \
    ros-${ROS_DISTRO}-octomap \
    ros-${ROS_DISTRO}-octomap-msgs \
    ros-${ROS_DISTRO}-amcl \
    ros-${ROS_DISTRO}-laser-filters \
    ros-${ROS_DISTRO}-bfl \
    ros-${ROS_DISTRO}-cv-bridge \
    ros-${ROS_DISTRO}-move-base-msgs \
    ros-${ROS_DISTRO}-nav-core \
    ros-${ROS_DISTRO}-navfn \
    ros-${ROS_DISTRO}-map-server \
    ros-${ROS_DISTRO}-xacro \
    ros-${ROS_DISTRO}-robot-state-publisher \
    ros-${ROS_DISTRO}-pcl-ros  \
    ros-${ROS_DISTRO}-pcl-conversions \
    ros-${ROS_DISTRO}-rviz \
    ros-${ROS_DISTRO}-marker-msgs \
    ros-${ROS_DISTRO}-stage-ros
    
    
RUN mkdir -p /opt/fastmarching && \
    git clone https://github.com/tuw-robotics/fastmarching.git  /opt/fastmarching/source && \
    mkdir -p /opt/fastmarching/source/build  && \
    cd /opt/fastmarching/source/build  && \
	cmake .. \
		  -DCMAKE_INSTALL_PREFIX=/opt/fastmarching/ \
		  -DCMAKE_BUILD_TYPE=Release && \
    make install
    
RUN apt install -y libjsoncpp-dev libblas-dev liblapack-dev gfortran && \
    mkdir -p /opt/Optizelle && \
    git clone https://github.com/tuw-robotics/Optizelle.git  /opt/Optizelle/source && \
    mkdir -p /opt/Optizelle/source/build && \
    cd /opt/Optizelle/source/build && \
    cmake .. \
      -DCMAKE_INSTALL_PREFIX=/opt/Optizelle/ \
      -DCMAKE_BUILD_TYPE=Release \
      -DENABLE_BUILD_JSONCPP=OFF \
      -DJSONCPP_INCLUDE_DIR=/usr/include/jsoncpp \
      -DJSONCPP_LIBRARY=/usr/lib/x86_64-linux-gnu/libjsoncpp.so && \
    make install
    

COPY ./git/ ${MY_HOME}/projects/mpn/
RUN chown -R ${MY_USER}:${MY_USER} ${MY_HOME}/projects/mpn/

USER ${MY_USER}


    
RUN /bin/bash -c '. /opt/ros/${ROS_DISTRO}/setup.bash;             cd ${MY_HOME}/projects/mpn/ws00; catkin_make' && \
    echo 'source ${MY_HOME}/projects/mpn/ws00/devel/setup.bash' >> ~/.bashrc

RUN /bin/bash -c '. ${MY_HOME}/projects/mpn/ws00/devel/setup.bash; cd ${MY_HOME}/projects/mpn/ws01; catkin_make' && \
    echo 'source ${MY_HOME}/projects/mpn/ws01/devel/setup.bash' >> ~/.bashrc
    
RUN /bin/bash -c '. ${MY_HOME}/projects/mpn/ws01/devel/setup.bash; cd ${MY_HOME}/projects/mpn/ws02; catkin_make' && \
    echo 'source ${MY_HOME}/projects/mpn/ws02/devel/setup.bash' >> ~/.bashrc

#RUN /bin/bash -c '. ${MY_HOME}/projects/mpn/ws02/devel/setup.bash; cd ${MY_HOME}/projects/mpn/ws03; catkin_make -Doptizelle_ROOT_DIR=/opt/Optizelle -DFMM_DIR=/opt/fastmarching/share/FMM' && \
#    echo 'source ${MY_HOME}/projects/mpn/ws03/devel/setup.bash' >> ~/.bashrc
    
# clean apt
USER root
RUN rm -rf /var/lib/apt/lists/*

USER ${MY_USER}
WORKDIR ${MY_HOME}
ENV HOME ${MY_HOME}
CMD /bin/bash
