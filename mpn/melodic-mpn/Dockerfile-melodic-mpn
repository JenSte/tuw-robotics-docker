ARG ROS_DISTRO=melodic
FROM osrf/ros:${ROS_DISTRO}-desktop
RUN echo "ROS_DISTRO is on ${ROS_DISTRO}"
ENV INST_SCRIPTS=/tmp
ENV SRC_DIR=./noetic-gz

# Replace 1000 with your user / group id
ARG MY_USER=robot
ARG MY_NAME="Robot"
ARG MY_PASSWORD="password"
ARG MY_UID=1000
ARG MY_GID=1000
ARG TZ=Europe/Vienna

ENV MY_USER=${MY_USER}
ENV MY_HOME=/home/${MY_USER}
ENV MPN_DIR ${MY_HOME}/projects/mpn

USER root
RUN apt update && apt -y upgrade

# Install locale and set
ENV DEBIAN_FRONTEND noninteractive
RUN apt install -y locales apt-utils
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
COPY ${SRC_DIR}/utils/keyboard /etc/default/keyboard
RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen; locale-gen

# Add user
RUN apt-get install -y apt-utils sudo bash-completion
RUN groupadd -g ${MY_GID} ${MY_USER}
RUN useradd -m -s /bin/bash  -u ${MY_UID} -g ${MY_GID} ${MY_USER}
RUN export uid=${MY_UID} gid=${MY_GID}
RUN usermod -aG sudo ${MY_USER}
RUN usermod -aG dialout ${MY_USER}
RUN echo "${MY_USER}:${MY_PASSWORD}" | chpasswd

# Optimize bashrc
RUN sed -i 's/HISTSIZE=1000/HISTSIZE=20000/g' ${MY_HOME}/.bashrc
RUN sed -i 's/HISTFILESIZE=2000/HISTFILESIZE=40000/g' ${MY_HOME}/.bashrc

# Remove sudo msg
RUN touch ${MY_HOME}/.sudo_as_admin_successful

RUN chown ${uid}:${gid} -R ${MY_HOME}


USER ${MY_USER}
RUN mkdir -p ${MPN_DIR}

# clean apt
USER root

RUN apt-get install -y  autoconf libgoogle-perftools-dev gperf
RUN mkdir -p /opt/fastmarching
RUN git clone https://github.com/tuw-robotics/fastmarching.git  /opt/fastmarching/source
RUN mkdir -p /opt/fastmarching/source/build
RUN cd /opt/fastmarching/source/build
RUN cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt/fastmarching/ ..
RUN make install

RUN  apt-get install -y  libjsoncpp-dev libblas-dev liblapack-dev gfortran
RUN  mkdir -p /opt/Optizelle
RUN  git clone https://github.com/tuw-robotics/Optizelle.git  /opt/Optizelle/source
RUN  mkdir -p /opt/Optizelle/source/build
RUN  cd /opt/Optizelle/source/build
RUN  cmake \
      -DCMAKE_INSTALL_PREFIX=/opt/Optizelle/ \
      -DCMAKE_BUILD_TYPE=Release \
      -DENABLE_BUILD_JSONCPP=OFF \
      -DJSONCPP_INCLUDE_DIR=/usr/include/jsoncpp \
      -DJSONCPP_LIBRARY=/usr/lib/x86_64-linux-gnu/libjsoncpp.so \
      ..
RUN  make install

RUN apt-get install -y  \
    libmgl-dev libjsoncpp-dev autoconf libncurses5-dev libdxflib-dev libgoogle-perftools-dev gperf \
    ros-${ROS_DISTRO}-costmap-2d \
    ros-${ROS_DISTRO}-octomap \
    ros-${ROS_DISTRO}-octomap-msgs \
    ros-${ROS_DISTRO}-amcl \
    ros-${ROS_DISTRO}-laser-filters \
    ros-${ROS_DISTRO}-bfl \
    ros-${ROS_DISTRO}-cv-bridge \
    ros-${ROS_DISTRO}-move-base-msgs \
    ros-${ROS_DISTRO}-nav-core \
    ros-${ROS_DISTRO}-navfn \
    ros-${ROS_DISTRO}-map-server \
    ros-${ROS_DISTRO}-xacro \
    ros-${ROS_DISTRO}-robot-state-publisher \
    ros-${ROS_DISTRO}-pcl-ros  \
    ros-${ROS_DISTRO}-pcl-conversions \
    ros-${ROS_DISTRO}-rviz \
    ros-${ROS_DISTRO}-marker-msgs

#RUN rm -rf /var/lib/apt/lists/*
RUN chown -R ${MY_USER}:${MY_USER} ${MY_HOME}

USER ${MY_USER}
WORKDIR ${MY_HOME}
ENV HOME ${MY_HOME}
CMD /bin/bash

